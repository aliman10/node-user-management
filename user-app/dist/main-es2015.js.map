{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12 mt-4\">\n            <h1 class=\"text-center\">User List</h1>\n            <table class=\"table table-bordered table-striped table-hover\">\n                <thead>\n                    <tr>\n                        <th class=\"text-center\">First Name</th>\n                        <th class=\"text-center\">Last Name</th>\n                        <th class=\"text-center\">Email</th>\n                        <th class=\"text-center\">&nbsp;</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of users\">\n                        <td>{{ user.firstName }}</td>\n                        <td>{{ user.lastName }}</td>\n                        <td>{{ user.email }}</td>\n\n\n                        <td>\n                            <button type=\"button\" class=\"btn btn-info btn-sm mr-2\"\n                                (click)=\"showEditUserForm(user)\">Edit</button>\n\n                            <button type=\"button\" class=\"btn btn-danger btn-sm\"\n                                (click)=\"removeUser(user)\">Delete</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <button class=\"btn btn-success\" (click)=\"showAddUserForm()\">Add New User</button>\n\n            <div class=\"mt-4\">\n                <form *ngIf=\"userForm\">\n                    <h2>Add New User</h2>\n                    <p>First Name: <input type=\"text\" name=\"firstName\" [(ngModel)]=\"newUser.firstName\" /></p>\n                    <p>Last Name: <input type=\"text\" name=\"lastName\" [(ngModel)]=\"newUser.lastName\" /></p>\n                    <p>Email: <input type=\"text\" name=\"lastName\" [(ngModel)]=\"newUser.email\" /></p>\n\n                    <p>\n                        <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"saveUser(newUser)\">Submit</button>\n                        <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelNewUser()\">Cancel</button>\n                    </p>\n                </form>\n\n                <form *ngIf=\"editUserForm\">\n                    <h2>Edit User Details</h2>\n                    <p>First Name: <input type=\"text\" name=\"firstName\" [(ngModel)]=\"editedUser.firstName\" /></p>\n                    <p>Last Name: <input type=\"text\" name=\"lastName\" [(ngModel)]=\"editedUser.lastName\" /></p>\n                    <p>Email: <input type=\"text\" name=\"eMail\" [(ngModel)]=\"editedUser.email\" /></p>\n                    <p>\n                        <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"updateUser()\">Submit</button>\n                        <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelEdits()\">Cancel</button>\n                    </p>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from './models/user';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  users: User[];\n  userForm: boolean;\n  isNewUser: boolean;\n  newUser: any = {};\n  editUserForm: boolean;\n  editedUser: any = {};\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.userService.LoadUsers().subscribe(\n      (data: User[]) => {\n        this.users = data;\n      }\n    );\n\n\n  }\n\n  showEditUserForm(user: User) {\n    if (!user) {\n      this.userForm = false;\n      return;\n    }\n    this.editUserForm = true;\n    this.editedUser = user;\n  }\n\n  showAddUserForm() {\n    // resets form if edited user\n    if (this.users.length) {\n      this.newUser = {};\n    }\n    this.userForm = true;\n    this.isNewUser = true;\n\n  }\n\n  saveUser(user: User) {\n    if (this.isNewUser) {\n      // add a new user\n     this.userService.addUser(user);\n      this.users.push(user);\n    }\n    this.userForm = false;\n  }\n\n  updateUser() {\n    let selectedUserByEmail = this.users.find(user => user.email === this.editedUser.email);\n    if (selectedUserByEmail) {\n      selectedUserByEmail.email = this.editedUser.email;\n      selectedUserByEmail.firstName = this.editedUser.firstName;\n      selectedUserByEmail.lastName = this.editedUser.lastName;\n      this.userService.updateUser(this.editedUser);\n      this.editUserForm = false;\n      this.editedUser = {};\n    }\n  }\n\n  removeUser(user: User) {\n    this.users.splice(this.users.indexOf(user), 1);\n    this.userService.deleteUser(user._id).subscribe();\n  }\n\n  cancelEdits() {\n    this.editedUser = {};\n    this.editUserForm = false;\n  }\n\n  cancelNewUser() {\n    this.newUser = {};\n    this.userForm = false;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { HttpClient } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private upersons: User[] = [];\n\n  public LoadUsers() {\n    return this.httpClient.get(\n      'https://user-management-node.herokuapp.com/user');\n  }\n\n  public AddUser(user: User) {\n    return this.httpClient.post('https://user-management-node.herokuapp.com/user',\n      {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        email: user.email,\n      }\n    );\n\n  }\n\n\n  public UpdateUser(user: User) {\n    return this.httpClient.patch( 'https://user-management-node.herokuapp.com/user/' + user._id,\n      {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        email: user.email\n      }\n    );\n\n  }\n\n  constructor(private httpClient: HttpClient) { }\n\n\n\n  addUser(user: User) {\n    this.AddUser(user).subscribe(\n      (data: User) => {\n        this.upersons.push(data);\n      }\n\n    );\n\n  }\n  updateUser(user: User) {\n    this.UpdateUser(user).subscribe();\n  }\n  deleteUser(id: any) {\n    return this.httpClient.delete(\n      'https://user-management-node.herokuapp.com/user/'+id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}