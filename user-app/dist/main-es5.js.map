{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AppComponent","userService","newUser","editedUser","getUsers","LoadUsers","subscribe","data","users","user","userForm","editUserForm","length","isNewUser","addUser","push","selectedUserByEmail","find","email","firstName","lastName","updateUser","splice","indexOf","deleteUser","_id","showAddUserForm","AppModule","BrowserModule","FormsModule","HttpClientModule","UserService","httpClient","upersons","get","post","patch","AddUser","UpdateUser","environment","production","enableProdMode","platformBrowser","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12 mt-4\">\n            <h1 class=\"text-center\">User List</h1>\n            <table class=\"table table-bordered table-striped table-hover\">\n                <thead>\n                    <tr>\n                        <th class=\"text-center\">First Name</th>\n                        <th class=\"text-center\">Last Name</th>\n                        <th class=\"text-center\">Email</th>\n                        <th class=\"text-center\">&nbsp;</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of users\">\n                        <td>{{ user.firstName }}</td>\n                        <td>{{ user.lastName }}</td>\n                        <td>{{ user.email }}</td>\n\n\n                        <td>\n                            <button type=\"button\" class=\"btn btn-info btn-sm mr-2\"\n                                (click)=\"showEditUserForm(user)\">Edit</button>\n\n                            <button type=\"button\" class=\"btn btn-danger btn-sm\"\n                                (click)=\"removeUser(user)\">Delete</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <button class=\"btn btn-success\" (click)=\"showAddUserForm()\">Add New User</button>\n\n            <div class=\"mt-4\">\n                <form *ngIf=\"userForm\">\n                    <h2>Add New User</h2>\n                    <p>First Name: <input type=\"text\" name=\"firstName\" [(ngModel)]=\"newUser.firstName\" /></p>\n                    <p>Last Name: <input type=\"text\" name=\"lastName\" [(ngModel)]=\"newUser.lastName\" /></p>\n                    <p>Email: <input type=\"text\" name=\"lastName\" [(ngModel)]=\"newUser.email\" /></p>\n\n                    <p>\n                        <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"saveUser(newUser)\">Submit</button>\n                        <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelNewUser()\">Cancel</button>\n                    </p>\n                </form>\n\n                <form *ngIf=\"editUserForm\">\n                    <h2>Edit User Details</h2>\n                    <p>First Name: <input type=\"text\" name=\"firstName\" [(ngModel)]=\"editedUser.firstName\" /></p>\n                    <p>Last Name: <input type=\"text\" name=\"lastName\" [(ngModel)]=\"editedUser.lastName\" /></p>\n                    <p>Email: <input type=\"text\" name=\"eMail\" [(ngModel)]=\"editedUser.email\" /></p>\n                    <p>\n                        <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"updateUser()\">Submit</button>\n                        <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelEdits()\">Cancel</button>\n                    </p>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from './models/user';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  users: User[];\n  userForm: boolean;\n  isNewUser: boolean;\n  newUser: any = {};\n  editUserForm: boolean;\n  editedUser: any = {};\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.userService.LoadUsers().subscribe(\n      (data: User[]) => {\n        this.users = data;\n      }\n    );\n\n\n  }\n\n  showEditUserForm(user: User) {\n    if (!user) {\n      this.userForm = false;\n      return;\n    }\n    this.editUserForm = true;\n    this.editedUser = user;\n  }\n\n  showAddUserForm() {\n    // resets form if edited user\n    if (this.users.length) {\n      this.newUser = {};\n    }\n    this.userForm = true;\n    this.isNewUser = true;\n\n  }\n\n  saveUser(user: User) {\n    if (this.isNewUser) {\n      // add a new user\n     this.userService.addUser(user);\n      this.users.push(user);\n    }\n    this.userForm = false;\n  }\n\n  updateUser() {\n    let selectedUserByEmail = this.users.find(user => user.email === this.editedUser.email);\n    if (selectedUserByEmail) {\n      selectedUserByEmail.email = this.editedUser.email;\n      selectedUserByEmail.firstName = this.editedUser.firstName;\n      selectedUserByEmail.lastName = this.editedUser.lastName;\n      this.userService.updateUser(this.editedUser);\n      this.editUserForm = false;\n      this.editedUser = {};\n    }\n  }\n\n  removeUser(user: User) {\n    this.users.splice(this.users.indexOf(user), 1);\n    this.userService.deleteUser(user._id).subscribe();\n  }\n\n  cancelEdits() {\n    this.editedUser = {};\n    this.editUserForm = false;\n  }\n\n  cancelNewUser() {\n    this.newUser = {};\n    this.userForm = false;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { HttpClient } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private upersons: User[] = [];\n\n  public LoadUsers() {\n    return this.httpClient.get(\n      'https://user-management-node.herokuapp.com/user');\n  }\n\n  public AddUser(user: User) {\n    return this.httpClient.post('https://user-management-node.herokuapp.com/user',\n      {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        email: user.email,\n      }\n    );\n\n  }\n\n\n  public UpdateUser(user: User) {\n    return this.httpClient.patch( 'https://user-management-node.herokuapp.com/user/' + user._id,\n      {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        email: user.email\n      }\n    );\n\n  }\n\n  constructor(private httpClient: HttpClient) { }\n\n\n\n  addUser(user: User) {\n    this.AddUser(user).subscribe(\n      (data: User) => {\n        this.upersons.push(data);\n      }\n\n    );\n\n  }\n  updateUser(user: User) {\n    this.UpdateUser(user).subscribe();\n  }\n  deleteUser(id: any) {\n    return this.httpClient.delete(\n      'https://user-management-node.herokuapp.com/user/'+id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}